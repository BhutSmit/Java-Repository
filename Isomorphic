import java.util.*;
class Solution {
    public boolean isIsomorphic(String s, String t) {

       if(s.length() != t.length()){

            return false;

       }

       Map<Character, Character> dict = new HashMap<>();

       for(int i = 0; i < s.length(); i++){

            if(dict.containsKey(s.charAt(i))){

                if (!dict.get(s.charAt(i)).equals(t.charAt(i))) {
                    return false;
                }
                else{

                    dict.put(s.charAt(i), t.charAt(i));

                }

            }
            else{
                //    if(dict.containsKey(t.charAt(i))){
                //         return false;
                //    }
                    dict.put(s.charAt(i), t.charAt(i));

            }

       }

       return true;

    }
}

Given two strings s and t, determine if they are isomorphic.

Two strings s and t are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.

 

Example 1:

Input: s = "egg", t = "add"
Output: true
